{"version":3,"sources":["../../src/layout/generic_layout.ts"],"names":["debug","GenericLayout","constructor","name","presentation","slide","appendCreateSlideRequest","requests","layoutId","Error","objectId","push","createSlide","slideLayoutReference","appendContentRequests","appendFillPlaceholderTextRequest","title","subtitle","backgroundImage","appendSetBackgroundImageRequest","tables","length","appendCreateTableRequests","bodies","bodyElements","forEach","body","index","placeholder","text","images","appendCreateImageRequests","videos","appendCreateVideoRequests","notes","appendInsertTextRequests","value","pageElements","locationProps","request","insertText","rawText","textRun","textRuns","updateTextStyle","textRange","type","startIndex","start","endIndex","end","style","bold","italic","foregroundColor","backgroundColor","strikethrough","underline","smallCaps","fontFamily","fontSize","link","baselineOffset","fields","computeShallowFieldMask","listMarker","_","reverse","listMarkers","createParagraphBullets","bulletPreset","image","url","updatePageProperties","pageProperties","pageBackgroundFill","stretchedPictureFill","contentUrl","layer","Layout","addItem","width","padding","height","meta","box","getBodyBoundingBox","computedLayout","export","scaleRatio","Math","min","scaledWidth","scaledHeight","baseTranslateX","x","baseTranslateY","y","item","items","itemOffsetX","offsetX","itemOffsetY","offsetY","itemPadding","translateX","translateY","createImage","elementProperties","pageObjectId","size","magnitude","unit","transform","scaleX","scaleY","shearX","shearY","video","id","createVideo","source","updateVideoProperties","videoProperties","autoPlay","table","tableId","createTable","rows","columns","r","cells","row","c","cellLocation","rowIndex","columnIndex","calculateBoundingBox","element","pageSize","object","field","Object","keys","undefined","join"],"mappings":"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","sourcesContent":["// Copyright 2016 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport Debug from 'debug';\nimport { uuid } from '../utils';\nimport extend from 'extend';\nimport Layout from 'layout';\nimport * as _ from 'lodash';\nimport { slides_v1 as SlidesV1 } from 'googleapis';\nimport { SlideDefinition, TextDefinition, VideoDefinition } from '../slides';\nimport { findLayoutIdByName, findPlaceholder, findSpeakerNotesObjectId } from './presentation_helpers';\n\nconst debug = Debug('md2gslides');\n\ninterface BoundingBox {\n    height: number;\n    width: number;\n    x: number;\n    y: number;\n}\n\n/**\n * Performs most of the work of converting a slide into API requests.\n *\n */\nexport default class GenericLayout {\n    public name: string;\n    public presentation: SlidesV1.Schema$Presentation;\n    private slide: SlideDefinition;\n\n    public constructor(name: string, presentation: SlidesV1.Schema$Presentation, slide: SlideDefinition) {\n        this.name = name;\n        this.presentation = presentation;\n        this.slide = slide;\n    }\n\n    public appendCreateSlideRequest(requests: SlidesV1.Schema$Request[]): SlidesV1.Schema$Request[] {\n        const layoutId = findLayoutIdByName(this.presentation, this.name);\n        if (!layoutId) {\n            throw new Error(`Unable to find layout ${this.name}`);\n        }\n        this.slide.objectId = uuid();\n\n        debug('Creating slide %s with layout %s', this.slide.objectId, this.name);\n        requests.push({\n            createSlide: {\n                slideLayoutReference: {\n                    layoutId: layoutId,\n                },\n                objectId: this.slide.objectId,\n            },\n        });\n        return requests;\n    }\n\n    public appendContentRequests(requests: SlidesV1.Schema$Request[]): SlidesV1.Schema$Request[] {\n        this.appendFillPlaceholderTextRequest(this.slide.title, 'TITLE', requests);\n        this.appendFillPlaceholderTextRequest(this.slide.title, 'CENTERED_TITLE', requests);\n        this.appendFillPlaceholderTextRequest(this.slide.subtitle, 'SUBTITLE', requests);\n\n        if (this.slide.backgroundImage) {\n            this.appendSetBackgroundImageRequest(this.slide.backgroundImage, requests);\n        }\n\n        if (this.slide.tables.length) {\n            this.appendCreateTableRequests(this.slide.tables, requests);\n        }\n\n        if (this.slide.bodies) {\n            const bodyElements = findPlaceholder(this.presentation, this.slide.objectId, 'BODY');\n            this.slide.bodies.forEach((body, index) => {\n                let placeholder = bodyElements[index];\n                this.appendFillPlaceholderTextRequest(body.text, placeholder, requests);\n                if (body.images && body.images.length) {\n                    this.appendCreateImageRequests(body.images, placeholder, requests);\n                }\n                if (body.videos && body.videos.length) {\n                    this.appendCreateVideoRequests(body.videos, placeholder, requests);\n                }\n            });\n        }\n\n        if (this.slide.notes) {\n            const objectId = findSpeakerNotesObjectId(this.presentation, this.slide.objectId);\n            this.appendInsertTextRequests(this.slide.notes, { objectId: objectId }, requests);\n        }\n\n        return requests;\n    }\n\n    protected appendFillPlaceholderTextRequest(\n        value: TextDefinition,\n        placeholder: string | SlidesV1.Schema$PageElement,\n        requests: SlidesV1.Schema$Request[],\n    ): SlidesV1.Schema$Request[] {\n        if (!value) {\n            debug('No text for placeholder %s');\n            return;\n        }\n\n        if (typeof placeholder === 'string') {\n            const pageElements = findPlaceholder(this.presentation, this.slide.objectId, placeholder);\n            if (!pageElements) {\n                debug('Skipping undefined placeholder %s', placeholder);\n                return;\n            }\n            placeholder = pageElements[0];\n        }\n\n        this.appendInsertTextRequests(value, { objectId: placeholder.objectId }, requests);\n    }\n\n    protected appendInsertTextRequests(text: TextDefinition, locationProps, requests: SlidesV1.Schema$Request[]): void {\n        // Insert the raw text first\n        let request = {\n            insertText: extend(\n                {\n                    text: text.rawText,\n                },\n                locationProps,\n            ),\n        };\n        requests.push(request);\n\n        // Apply any text styles present.\n        // Most of the work for generating the text runs\n        // is performed when parsing markdown.\n        for (let textRun of text.textRuns) {\n            let request: SlidesV1.Schema$Request = {\n                updateTextStyle: extend(\n                    {\n                        textRange: {\n                            type: 'FIXED_RANGE',\n                            startIndex: textRun.start,\n                            endIndex: textRun.end,\n                        },\n                        style: {\n                            bold: textRun.bold,\n                            italic: textRun.italic,\n                            foregroundColor: textRun.foregroundColor,\n                            backgroundColor: textRun.backgroundColor,\n                            strikethrough: textRun.strikethrough,\n                            underline: textRun.underline,\n                            smallCaps: textRun.smallCaps,\n                            fontFamily: textRun.fontFamily,\n                            fontSize: textRun.fontSize,\n                            link: textRun.link,\n                            baselineOffset: textRun.baselineOffset,\n                        },\n                    },\n                    locationProps,\n                ),\n            };\n            request.updateTextStyle.fields = this.computeShallowFieldMask(request.updateTextStyle.style);\n            if (request.updateTextStyle.fields.length) {\n                requests.push(request); // Only push if at least one style set\n            }\n        }\n\n        // Convert paragraphs to lists.\n        // Note that leading tabs for nested lists in the raw text are removed.\n        // In this case, we're assuming that lists are supplied in order of\n        // appearance and they're non-overlapping.\n        // Processing in the reverse order avoids having to readjust indices.\n        for (let listMarker of _.reverse(text.listMarkers)) {\n            let request = {\n                createParagraphBullets: extend(\n                    {\n                        textRange: {\n                            type: 'FIXED_RANGE',\n                            startIndex: listMarker.start,\n                            endIndex: listMarker.end,\n                        },\n                        bulletPreset:\n                            listMarker.type == 'ordered' ? 'NUMBERED_DIGIT_ALPHA_ROMAN' : 'BULLET_DISC_CIRCLE_SQUARE',\n                    },\n                    locationProps,\n                ),\n            };\n            requests.push(request);\n        }\n    }\n\n    protected appendSetBackgroundImageRequest(image, requests: SlidesV1.Schema$Request[]): void {\n        debug('Slide #%d: setting background image to %s', this.slide.index, image.url);\n\n        requests.push({\n            updatePageProperties: {\n                objectId: this.slide.objectId,\n                fields: 'pageBackgroundFill.stretchedPictureFill.contentUrl',\n                pageProperties: {\n                    pageBackgroundFill: {\n                        stretchedPictureFill: {\n                            contentUrl: image.url,\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n    protected appendCreateImageRequests(images, placeholder, requests: SlidesV1.Schema$Request[]): void {\n        // TODO - Fix weird cast\n        const layer = (Layout as (s: string) => Layout.PackingSmith)('left-right'); // TODO - Configurable?\n        for (let image of images) {\n            debug('Slide #%d: adding inline image %s', this.slide.index, image.url);\n            layer.addItem({\n                width: image.width + image.padding * 2,\n                height: image.height + image.padding * 2,\n                meta: image,\n            });\n        }\n\n        const box = this.getBodyBoundingBox(placeholder);\n        const computedLayout = layer.export();\n\n        let scaleRatio = Math.min(box.width / computedLayout.width, box.height / computedLayout.height);\n\n        let scaledWidth = computedLayout.width * scaleRatio;\n        let scaledHeight = computedLayout.height * scaleRatio;\n\n        let baseTranslateX = box.x + (box.width - scaledWidth) / 2;\n        let baseTranslateY = box.y + (box.height - scaledHeight) / 2;\n\n        for (let item of computedLayout.items) {\n            let itemOffsetX = item.meta.offsetX ? item.meta.offsetX : 0;\n            let itemOffsetY = item.meta.offsetY ? item.meta.offsetY : 0;\n            let itemPadding = item.meta.padding ? item.meta.padding : 0;\n            let width = item.meta.width * scaleRatio;\n            let height = item.meta.height * scaleRatio;\n            let translateX = baseTranslateX + (item.x + itemPadding + itemOffsetX) * scaleRatio;\n            let translateY = baseTranslateY + (item.y + itemPadding + itemOffsetY) * scaleRatio;\n\n            requests.push({\n                createImage: {\n                    elementProperties: {\n                        pageObjectId: this.slide.objectId,\n                        size: {\n                            height: {\n                                magnitude: height,\n                                unit: 'EMU',\n                            },\n                            width: {\n                                magnitude: width,\n                                unit: 'EMU',\n                            },\n                        },\n                        transform: {\n                            scaleX: 1,\n                            scaleY: 1,\n                            translateX: translateX,\n                            translateY: translateY,\n                            shearX: 0,\n                            shearY: 0,\n                            unit: 'EMU',\n                        },\n                    },\n                    url: item.meta.url,\n                },\n            });\n        }\n    }\n\n    protected appendCreateVideoRequests(\n        videos: VideoDefinition[],\n        placeholder,\n        requests: SlidesV1.Schema$Request[],\n    ): void {\n        if (videos.length > 1) {\n            throw new Error('Multiple videos per slide are not supported.');\n        }\n        const video = videos[0];\n\n        debug('Slide #%d: adding video %s', this.slide.index, video.id);\n\n        const box = this.getBodyBoundingBox(placeholder);\n\n        const scaleRatio = Math.min(box.width / video.width, box.height / video.height);\n\n        const scaledWidth = video.width * scaleRatio;\n        const scaledHeight = video.height * scaleRatio;\n\n        let translateX = box.x + (box.width - scaledWidth) / 2;\n        let translateY = box.y + (box.height - scaledHeight) / 2;\n\n        const objectId = uuid();\n        requests.push({\n            createVideo: {\n                source: 'YOUTUBE',\n                objectId: objectId,\n                id: video.id,\n                elementProperties: {\n                    pageObjectId: this.slide.objectId,\n                    size: {\n                        height: {\n                            magnitude: scaledHeight,\n                            unit: 'EMU',\n                        },\n                        width: {\n                            magnitude: scaledWidth,\n                            unit: 'EMU',\n                        },\n                    },\n                    transform: {\n                        scaleX: 1,\n                        scaleY: 1,\n                        translateX: translateX,\n                        translateY: translateY,\n                        shearX: 0,\n                        shearY: 0,\n                        unit: 'EMU',\n                    },\n                },\n            },\n        });\n        requests.push({\n            updateVideoProperties: {\n                objectId: objectId,\n                fields: 'autoPlay',\n                videoProperties: {\n                    autoPlay: video.autoPlay,\n                },\n            },\n        });\n    }\n\n    protected appendCreateTableRequests(tables, requests: SlidesV1.Schema$Request[]): void {\n        if (tables.length > 1) {\n            throw new Error('Multiple tables per slide are not supported.');\n        }\n        const table = tables[0];\n        const tableId = uuid();\n\n        requests.push({\n            createTable: {\n                objectId: tableId,\n                elementProperties: {\n                    pageObjectId: this.slide.objectId,\n                    // Use default size/transform for tables\n                },\n                rows: table.rows,\n                columns: table.columns,\n            },\n        });\n\n        for (let r in table.cells) {\n            let row = table.cells[r];\n            for (let c in row) {\n                this.appendInsertTextRequests(\n                    row[c],\n                    {\n                        objectId: tableId,\n                        cellLocation: {\n                            rowIndex: r,\n                            columnIndex: c,\n                        },\n                    },\n                    requests,\n                );\n            }\n        }\n    }\n\n    protected calculateBoundingBox(element: SlidesV1.Schema$PageElement): BoundingBox {\n        const height = element.size.height.magnitude;\n        const width = element.size.width.magnitude;\n        const scaleX = element.transform.scaleX || 1;\n        const scaleY = element.transform.scaleY || 1;\n        const shearX = element.transform.shearX || 0;\n        const shearY = element.transform.shearY || 0;\n\n        return {\n            width: scaleX * width + shearX * height,\n            height: scaleY * height + shearY * width,\n            x: element.transform.translateX,\n            y: element.transform.translateY,\n        };\n    }\n\n    protected getBodyBoundingBox(placeholder): BoundingBox {\n        if (placeholder) {\n            return this.calculateBoundingBox(placeholder);\n        }\n        return {\n            width: this.presentation.pageSize.width.magnitude,\n            height: this.presentation.pageSize.height.magnitude,\n            x: 0,\n            y: 0,\n        };\n    }\n\n    protected computeShallowFieldMask(object: object): string {\n        const fields = [];\n        for (var field of Object.keys(object)) {\n            if (object[field] !== undefined) {\n                fields.push(field);\n            }\n        }\n        return fields.join(',');\n    }\n}\n"],"file":"generic_layout.js"}