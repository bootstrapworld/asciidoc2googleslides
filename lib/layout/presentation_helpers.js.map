{"version":3,"sources":["../../src/layout/presentation_helpers.ts"],"names":["findPage","presentation","pageId","slides","undefined","find","p","objectId","pageSize","width","magnitude","height","findLayoutIdByName","name","layouts","layout","l","layoutProperties","findPlaceholder","page","Error","placeholders","pageElements","element","shape","placeholder","type","push","length","findPageElement","id","findSpeakerNotesObjectId","slideProperties","notesPage","notesProperties","speakerNotesObjectId"],"mappings":"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","sourcesContent":["// Copyright 2016 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { slides_v1 as SlidesV1 } from 'googleapis';\n\nexport interface Dimensions {\n    width: number;\n    height: number;\n}\n\n/**\n * Locates a page by ID\n *\n * @param {string} pageId Object ID of page to find\n * @returns {Object} Page or null if not found\n */\nexport function findPage(presentation: SlidesV1.Schema$Presentation, pageId: string): SlidesV1.Schema$Page | undefined {\n    if (!presentation.slides) {\n        return undefined;\n    }\n    return presentation.slides.find((p): boolean => p.objectId === pageId);\n}\n\nexport function pageSize(presentation: SlidesV1.Schema$Presentation): Dimensions {\n    return {\n        width: presentation.pageSize.width.magnitude,\n        height: presentation.pageSize.height.magnitude,\n    };\n}\n\n/**\n * Locates a layout.\n *\n * @param {string} name\n * @returns {string} layout ID or null if not found\n */\nexport function findLayoutIdByName(presentation: SlidesV1.Schema$Presentation, name: string): string | undefined {\n    if (!presentation.layouts) {\n        return undefined;\n    }\n    const layout = presentation.layouts.find((l): boolean => l.layoutProperties.name === name);\n    if (!layout) {\n        return undefined;\n    }\n    return layout.objectId;\n}\n\n/**\n * Find a named placeholder on the page.\n *\n * @param {string} pageId Object ID of page to find element on\n * @param name Placeholder name.\n * @returns {Array} Array of placeholders\n */\nexport function findPlaceholder(\n    presentation: SlidesV1.Schema$Presentation,\n    pageId: string,\n    name: string,\n): SlidesV1.Schema$PageElement[] | undefined {\n    const page = findPage(presentation, pageId);\n    if (!page) {\n        throw new Error(`Can't find page ${pageId}`);\n    }\n\n    let placeholders = [];\n    if (!page.pageElements) {\n        return undefined;\n    }\n\n    for (let element of page.pageElements) {\n        if (element.shape && element.shape.placeholder && name == element.shape.placeholder.type) {\n            placeholders.push(element);\n        }\n    }\n\n    if (placeholders.length) {\n        return placeholders;\n    }\n\n    return undefined;\n}\n\n/**\n * Locates a element on a page by ID.\n *\n * @param {string} pageId Object ID of page to find element on\n * @returns {Object} Object or null if not found\n */\nexport function findPageElement(\n    presentation: SlidesV1.Schema$Presentation,\n    pageId: string,\n    id: string,\n): SlidesV1.Schema$PageElement | undefined {\n    const page = findPage(presentation, pageId);\n    if (!page) {\n        throw new Error(`Can't find page ${pageId}`);\n    }\n\n    for (let element of page.pageElements) {\n        if (element.objectId == id) {\n            return element;\n        }\n    }\n    return undefined;\n}\n\nexport function findSpeakerNotesObjectId(\n    presentation: SlidesV1.Schema$Presentation,\n    pageId: string,\n): string | undefined {\n    let page = findPage(presentation, pageId);\n    if (page) {\n        return page.slideProperties.notesPage.notesProperties.speakerNotesObjectId;\n    }\n    return undefined;\n}\n"],"file":"presentation_helpers.js"}