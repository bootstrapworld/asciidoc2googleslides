{"version":3,"sources":["../../src/parser/extract_slides.ts"],"names":["debug","inlineTokenRules","fullTokenRules","ruleSet","attr","token","name","attrs","undefined","find","a","hasClass","cls","isVideo","service","videoID","processMarkdownToken","context","rule","type","processTokens","tokens","forEach","index","applyTokenStyle","style","styleAttr","css","bold","startStyle","endStyle","child","children","fragment","parse5","parseFragment","inlineHtmlContext","content","childNodes","length","node","nodeName","italic","fontFamily","baselineOffset","Error","value","appendText","markerParagraph","body","text","images","videos","currentSlide","bodies","push","startTextBlock","layout","customLayout","language","info","trim","replace","strikethrough","link","url","list","tag","depth","start","rawText","listMarkers","end","Array","join","big","title","subtitle","re","match","exec","subContext","Context","notes","endSlide","startSlide","image","width","height","padding","offsetX","offsetY","parseInt","backgroundImage","video","autoPlay","id","table","rows","columns","cells","tables","row","Math","max","foregroundColor","opaqueColor","themeColor","source","extractSlides","markdown","stylesheet","done","slides"],"mappings":"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","sourcesContent":["// Copyright 2016 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport Debug from 'debug';\nimport extend from 'extend';\nimport Token from 'markdown-it/lib/token';\nimport parse5 from 'parse5';\nimport fileUrl from 'file-url';\nimport { SlideDefinition, StyleDefinition } from '../slides';\nimport parseMarkdown from './parser';\nimport { Context } from './env';\nimport highlightSyntax from './syntax_highlight';\nimport { parseStyleSheet, parseInlineStyle, updateStyleDefinition } from './css';\n\nconst debug = Debug('md2gslides');\n\ntype MarkdownRuleFn = (token: Token, context: Context) => void;\ninterface MarkdownRules {\n    [k: string]: MarkdownRuleFn;\n}\n\ninterface VideoToken extends Token {\n    service: string;\n    videoID: string;\n}\n\nconst inlineTokenRules: MarkdownRules = {};\nconst fullTokenRules: MarkdownRules = {};\n\nlet ruleSet: MarkdownRules;\n\nfunction attr(token: Token, name: string): string {\n    if (!token.attrs) {\n        return undefined;\n    }\n    let attr = token.attrs.find(a => a[0] === name);\n    if (!attr) {\n        return undefined;\n    }\n    return attr[1];\n}\n\nfunction hasClass(token, cls): boolean {\n    return cls == attr(token, 'class');\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isVideo(token: any): token is VideoToken {\n    return token.service !== undefined && token.videoID !== undefined;\n}\n\nfunction processMarkdownToken(token: Token, context: Context): void {\n    debug('Token: %O', token);\n    let rule = ruleSet[token.type];\n    if (rule) {\n        rule(token, context);\n    } else {\n        debug('Ignoring token %s', token.type);\n    }\n}\n\nfunction processTokens(tokens: Token[], context: Context): void {\n    tokens.forEach((token, index) => {\n        if (token.type == 'hr' && index == 0) {\n            return; // Skip leading HR since no previous slide\n        }\n        processMarkdownToken(token, context);\n    });\n}\n\nfunction applyTokenStyle(token: Token, style: StyleDefinition): StyleDefinition {\n    if (!token.attrs) {\n        return style;\n    }\n    let styleAttr = token.attrs.find(attr => attr[0] === 'style');\n    if (styleAttr === undefined) {\n        return style;\n    }\n\n    let css = parseInlineStyle(styleAttr[1]);\n    updateStyleDefinition(css, style);\n    return style;\n}\n\n// Rules for processing markdown tokens\n\n// These rules are specific to parsing markdown in an inline context.\n\ninlineTokenRules['heading_open'] = (token, context) => {\n    const style = applyTokenStyle(token, { bold: true });\n    context.startStyle(style); // TODO - Better style for inline headers\n};\n\ninlineTokenRules['heading_close'] = (token, context) => context.endStyle();\n\ninlineTokenRules['inline'] = (token, context) => {\n    for (let child of token.children) {\n        processMarkdownToken(child, context);\n    }\n};\n\ninlineTokenRules['html_inline'] = (token, context) => {\n    const fragment = parse5.parseFragment(context.inlineHtmlContext, token.content);\n    if (fragment.childNodes && fragment.childNodes.length) {\n        const node = fragment.childNodes[0];\n        let style: StyleDefinition = {};\n\n        switch (node.nodeName) {\n            case 'strong':\n            case 'b':\n                style.bold = true;\n                break;\n            case 'em':\n            case 'i':\n                style.italic = true;\n                break;\n            case 'code':\n                style.fontFamily = 'Courier New';\n                break;\n            case 'sub':\n                style.baselineOffset = 'SUBSCRIPT';\n                break;\n            case 'sup':\n                style.baselineOffset = 'SUPERSCRIPT';\n                break;\n            case 'span':\n                break;\n            case '#comment':\n                // Depending on spacing, comment blocks\n                // sometimes appear as inline elements\n                fullTokenRules['html_block'](token, context);\n                return;\n            default:\n                throw new Error('Unsupported inline HTML element: ' + node.nodeName);\n        }\n\n        let styleAttr = node.attrs.find(attr => attr.name === 'style');\n        if (styleAttr) {\n            let css = parseInlineStyle(styleAttr.value);\n            updateStyleDefinition(css, style);\n        }\n        context.inlineHtmlContext = fragment.childNodes[0];\n        context.startStyle(style);\n    } else {\n        context.endStyle();\n    }\n};\n\ninlineTokenRules['text'] = (token, context) => {\n    const style = applyTokenStyle(token, {});\n    context.startStyle(style);\n    context.appendText(token.content);\n    context.endStyle();\n};\n\ninlineTokenRules['paragraph_open'] = (token, context) => {\n    if (hasClass(token, 'column')) {\n        context.markerParagraph = true;\n        let body = {\n            text: context.text,\n            images: context.images,\n            videos: context.videos,\n        };\n        context.images = [];\n        context.videos = [];\n        context.currentSlide.bodies.push(body);\n        context.startTextBlock();\n    } else if (!context.text) {\n        context.startTextBlock();\n    }\n\n    var layout = attr(token, 'layout');\n    // If we have a layout attribute set this on the slide so we can select the\n    // right master template when building the deck\n    if (layout != undefined && layout != '') {\n        context.currentSlide.customLayout = layout;\n    }\n};\n\ninlineTokenRules['paragraph_close'] = (token, context) => {\n    if (context.markerParagraph) {\n        // Empty column marker, just clear flag\n        context.markerParagraph = false;\n    } else {\n        context.appendText('\\n');\n    }\n};\n\ninlineTokenRules['fence'] = (token, context) => {\n    const style = applyTokenStyle(token, { fontFamily: 'Courier New' });\n    context.startStyle(style);\n    const language = token.info ? token.info.trim() : undefined;\n    if (language) {\n        highlightSyntax(token.content, language, context);\n    } else {\n        // For code blocks, replace line feeds with vertical tabs to keep\n        // the block as a single paragraph. This avoid the extra vertical\n        // space that appears between paragraphs\n        context.appendText(token.content.replace(/\\n/g, '\\u000b'));\n    }\n    context.appendText('\\n');\n    context.endStyle();\n};\n\ninlineTokenRules['em_open'] = (token, context) => {\n    const style = applyTokenStyle(token, { italic: true });\n    context.startStyle(style);\n};\n\ninlineTokenRules['em_close'] = (token, context) => context.endStyle();\n\ninlineTokenRules['s_open'] = (token, context) => {\n    const style = applyTokenStyle(token, { strikethrough: true });\n    context.startStyle(style);\n};\n\ninlineTokenRules['s_close'] = (token, context) => context.endStyle();\n\ninlineTokenRules['strong_open'] = (token, context) => {\n    const style = applyTokenStyle(token, { bold: true });\n    context.startStyle(style);\n};\n\ninlineTokenRules['strong_close'] = (token, context) => context.endStyle();\n\ninlineTokenRules['link_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {\n        link: {\n            url: attr(token, 'href'),\n        },\n    });\n    context.startStyle(style);\n};\n\ninlineTokenRules['link_close'] = (token, context) => context.endStyle();\n\ninlineTokenRules['code_inline'] = (token, context) => {\n    const style = applyTokenStyle(token, { fontFamily: 'Courier New' });\n    context.startStyle(style);\n    context.appendText(token.content);\n    context.endStyle();\n};\n\ninlineTokenRules['hardbreak'] = (token, context) => context.appendText('\\u000b');\n\ninlineTokenRules['softbreak'] = (token, context) => context.appendText(' ');\n\ninlineTokenRules['blockquote_open'] = (token, context) => {\n    // TODO - More interesting styling for block quotes\n    const style = applyTokenStyle(token, { italic: true });\n    context.startStyle(style);\n};\n\ninlineTokenRules['blockquote_close'] = (token, context) => context.endStyle();\n\ninlineTokenRules['emoji'] = (token, context) => context.appendText(token.content);\n\ninlineTokenRules['bullet_list_open'] = inlineTokenRules['ordered_list_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {});\n    context.startStyle(style);\n    if (context.list) {\n        if (context.list.tag != token.tag) {\n            throw new Error('Nested lists must match parent style');\n        }\n        context.list.depth += 1;\n    } else {\n        context.list = {\n            depth: 0,\n            tag: token.tag,\n            start: context.text.rawText.length,\n        };\n    }\n};\n\ninlineTokenRules['bullet_list_close'] = inlineTokenRules['ordered_list_close'] = (token, context) => {\n    if (context.list.depth == 0) {\n        // TODO - Support nested lists with mixed styles when API supports it.\n        // Currently nested lists must match the parent style.\n        context.text.listMarkers.push({\n            start: context.list.start,\n            end: context.text.rawText.length,\n            type: token.tag == 'ul' ? 'unordered' : 'ordered',\n        });\n        context.list = null;\n    } else {\n        context.list.depth -= 1;\n    }\n    context.endStyle();\n};\n\ninlineTokenRules['list_item_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {});\n    context.startStyle(style);\n    context.appendText(new Array(context.list.depth + 1).join('\\t'));\n};\n\ninlineTokenRules['list_item_close'] = (token, context) => context.endStyle();\n\n// Additional rules for processing the entire document\n// Extends inline rules with support for additional\n// tokens that only make sense in the context of a slide\n// or presentation\nextend(fullTokenRules, inlineTokenRules);\n\nfullTokenRules['heading_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {});\n    context.startTextBlock();\n    context.startStyle(style);\n    context.text.big = hasClass(token, 'big');\n};\n\nfullTokenRules['heading_close'] = (token, context) => {\n    if (token.tag == 'h1') {\n        context.currentSlide.title = context.text;\n    } else if (token.tag == 'h2') {\n        context.currentSlide.subtitle = context.text;\n    } else {\n        debug('Ignoring header element %s', token.tag);\n    }\n    context.endStyle();\n    context.startTextBlock();\n};\n\nfullTokenRules['html_block'] = (token, context) => {\n    var re = /<!--([\\s\\S]*)-->/m;\n    var match = re.exec(token.content);\n    if (match == null) {\n        throw new Error('Unsupported HTML block: ' + token.content);\n    }\n    // Since the notes can contain unparsed markdown, create a new environment\n    // to process it so we don't inadvertently lose state. Just carry\n    // forward the notes from the current slide to append to\n    var subContext = new Context(context.css);\n    ruleSet = inlineTokenRules;\n    if (context.currentSlide.notes) {\n        subContext.text = context.currentSlide.notes;\n    } else {\n        subContext.startTextBlock();\n    }\n    var tokens = parseMarkdown(match[1]);\n    processTokens(tokens, subContext);\n    if (subContext.text && subContext.text.rawText.trim().length) {\n        context.currentSlide.notes = subContext.text;\n    }\n    ruleSet = fullTokenRules;\n};\n\nfullTokenRules['hr'] = (token, context) => {\n    context.endSlide();\n    context.startSlide();\n};\n\nfullTokenRules['image'] = (token, context) => {\n    let url = attr(token, 'src');\n    if (!url.match(/(file|https?):/)) {\n        url = fileUrl(url);\n    }\n    const image = {\n        url: url,\n        width: undefined,\n        height: undefined,\n        padding: 0,\n        offsetX: 0,\n        offsetY: 0,\n    };\n\n    const padding = attr(token, 'pad');\n    if (padding) {\n        image.padding = parseInt(padding);\n    }\n\n    const offsetX = attr(token, 'offset-x');\n    if (offsetX) {\n        image.offsetX = parseInt(offsetX);\n    }\n\n    const offsetY = attr(token, 'offset-y');\n    if (offsetY) {\n        image.offsetY = parseInt(offsetY);\n    }\n\n    if (hasClass(token, 'background')) {\n        context.currentSlide.backgroundImage = image;\n    } else {\n        context.images.push(image);\n    }\n};\n\nfullTokenRules['video'] = (token, context) => {\n    if (!isVideo(token)) {\n        return;\n    }\n    if (token.service != 'youtube') {\n        throw new Error('Only YouTube videos allowed');\n    }\n    // Assume 16:9 aspect ratio\n    const video = {\n        width: 1600,\n        height: 900,\n        autoPlay: true,\n        id: token.videoID,\n    };\n    context.videos.push(video);\n};\n\nfullTokenRules['table_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {});\n    context.startStyle(style);\n    context.table = {\n        rows: 0,\n        columns: 0,\n        cells: [],\n    };\n};\n\nfullTokenRules['table_close'] = (token, context) => {\n    context.currentSlide.tables.push(context.table);\n    context.endStyle();\n};\n\nfullTokenRules['thead_open'] = () => {};\nfullTokenRules['thead_close'] = () => {};\n\nfullTokenRules['tbody_open'] = () => {};\nfullTokenRules['tbody_close'] = () => {};\n\nfullTokenRules['tr_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {});\n    context.startStyle(style);\n    context.row = [];\n};\n\nfullTokenRules['tr_close'] = (token, context) => {\n    const row = context.row;\n    context.table.cells.push(row);\n    context.table.columns = Math.max(context.table.columns, row.length);\n    context.table.rows = context.table.cells.length;\n    context.endStyle();\n};\n\nfullTokenRules['td_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {\n        foregroundColor: {\n            opaqueColor: {\n                themeColor: 'TEXT1',\n            },\n        },\n    });\n    context.startStyle(style);\n    context.startTextBlock();\n};\n\nfullTokenRules['th_open'] = (token, context) => {\n    const style = applyTokenStyle(token, {\n        bold: true,\n        // Note: Non-placeholder elements aren't aware of the slide theme.\n        // Set the foreground color to match the primary text color of the\n        // theme.\n        foregroundColor: {\n            opaqueColor: {\n                themeColor: 'TEXT1',\n            },\n        },\n    });\n    context.startStyle(style);\n    context.startTextBlock();\n};\n\nfullTokenRules['td_close'] = fullTokenRules['th_close'] = (token, context) => {\n    context.endStyle();\n    context.row.push(context.text);\n    context.startTextBlock();\n};\n\nfullTokenRules['generated_image'] = (token, context) => {\n    const image = {\n        source: token.content,\n        type: token.info.trim(),\n        width: undefined,\n        height: undefined,\n        style: attr(token, 'style'),\n        padding: 0,\n        offsetX: 0,\n        offsetY: 0,\n    };\n    const padding = attr(token, 'pad');\n    if (padding) {\n        image.padding = parseInt(padding);\n    }\n    if (hasClass(token, 'background')) {\n        context.currentSlide.backgroundImage = image;\n    } else {\n        context.images.push(image);\n    }\n};\n\n/**\n * Parse the markdown and converts it into a form more suitable\n * for creating slides.\n *\n * Returns an array of objects where each item represents an individual\n * slide.\n *\n * @param {string} markdown\n * @param {string} stylesheet\n * @returns {Promise.<Array>}\n */\nexport default function extractSlides(markdown: string, stylesheet: string = null): SlideDefinition[] {\n    let tokens = parseMarkdown(markdown);\n    let css = parseStyleSheet(stylesheet);\n    let context = new Context(css);\n    ruleSet = fullTokenRules; // TODO - Make not global\n    processTokens(tokens, context);\n    context.done();\n    debug('Slides %O', context.slides);\n    return context.slides;\n}\n"],"file":"extract_slides.js"}