{"version":3,"sources":["../../src/parser/env.ts"],"names":["Context","constructor","css","startSlide","done","endSlide","startTextBlock","text","rawText","textRuns","listMarkers","big","appendText","content","currentSlide","images","length","videos","trim","bodies","push","slides","undefined","objectId","customLayout","title","subtitle","backgroundImage","tables","notes","currentStyle","styles","startStyle","newStyle","previousStyle","style","start","endStyle","pop","end","_","isEmpty","keys","omit","find","matches"],"mappings":"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","sourcesContent":["// Copyright 2019 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    SlideDefinition,\n    TextDefinition,\n    StyleDefinition,\n    TableDefinition,\n    ListDefinition,\n    ImageDefinition,\n    VideoDefinition,\n} from '../slides';\nimport { uuid } from '../utils';\nimport extend from 'extend';\nimport * as _ from 'lodash';\nimport { Stylesheet } from './css';\n\nexport class Context {\n    public slides: SlideDefinition[] = [];\n    public currentSlide?: SlideDefinition;\n    public text?: TextDefinition;\n    public styles: StyleDefinition[] = [{}];\n    public listDepth = 0;\n    public css?: Stylesheet;\n    public markerParagraph = false;\n    public row: TextDefinition[] = [];\n    public table?: TableDefinition;\n    public list?: ListDefinition;\n    public inlineHtmlContext?: object;\n    public images: ImageDefinition[] = [];\n    public videos: VideoDefinition[] = [];\n\n    public constructor(css: Stylesheet) {\n        this.css = css;\n        this.startSlide();\n    }\n\n    public done(): void {\n        this.endSlide();\n    }\n\n    public startTextBlock(): void {\n        this.text = {\n            rawText: '',\n            textRuns: [],\n            listMarkers: [],\n            big: false,\n        };\n    }\n\n    public appendText(content: string): void {\n        this.text.rawText += content;\n    }\n\n    public endSlide(): void {\n        if (this.currentSlide) {\n            if (this.images.length || this.videos.length || (this.text && this.text.rawText.trim().length)) {\n                this.currentSlide.bodies.push({\n                    text: this.text,\n                    images: this.images,\n                    videos: this.videos,\n                });\n                this.images = [];\n                this.videos = [];\n            }\n            this.slides.push(this.currentSlide);\n        }\n        this.currentSlide = undefined;\n        this.text = undefined;\n    }\n\n    public startSlide(): void {\n        this.currentSlide = {\n            objectId: uuid(),\n            customLayout: null,\n            title: null,\n            subtitle: null,\n            backgroundImage: null,\n            bodies: [],\n            tables: [],\n            notes: null,\n        };\n    }\n\n    public currentStyle(): StyleDefinition {\n        return this.styles[this.styles.length - 1];\n    }\n\n    public startStyle(newStyle: StyleDefinition): void {\n        const previousStyle = this.currentStyle();\n        const style = extend({}, newStyle, previousStyle);\n        style.start = this.text.rawText.length;\n        this.styles.push(style);\n    }\n\n    public endStyle(): void {\n        const style = this.styles.pop();\n        style.end = this.text.rawText.length;\n        if (style.start == style.end) {\n            return; // Ignore empty ranges\n        }\n        if (_.isEmpty(_.keys(_.omit(style, 'start', 'end')))) {\n            return; // Ignore ranges with no style\n        }\n        if (_.find(this.text.textRuns, _.matches(style))) {\n            return; // Ignore duplicate ranges\n        }\n        this.text.textRuns.push(style);\n    }\n}\n"],"file":"env.js"}