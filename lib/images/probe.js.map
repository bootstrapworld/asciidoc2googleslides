{"version":3,"sources":["../../src/images/probe.ts"],"names":["debug","retriableCodes","probeOptions","timeout","retryOptions","retries","randomize","probeUrl","url","doRetry","err","includes","code","probeFile","path","stream","fs","createReadStream","destroy","probeImage","image","promise","parsedUrl","URL","protocol","pathname","size","width","height"],"mappings":";;;;;;;AAcA;;AACA;;AAEA;;AACA;;AACA;;;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA,MAAMA,KAAK,GAAG,oBAAM,YAAN,CAAd;AACA,MAAMC,cAAc,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CAAvB;AACA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAArB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAArB;;AAUA,eAAeC,QAAf,CAAwBC,GAAxB,EAAiD;AAC7C,SAAO,MAAM,2BAAM,MAAMC,OAAN,IAAiB;AAChC,QAAI;AACA,aAAO,MAAM,6BAAeD,GAAf,EAAoBN,YAApB,CAAb;AACH,KAFD,CAEE,OAAOQ,GAAP,EAAY;AACV,UAAIT,cAAc,CAACU,QAAf,CAAwBD,GAAG,CAACE,IAA5B,CAAJ,EAAuC;AACnCH,QAAAA,OAAO,CAACC,GAAD,CAAP;AACH;;AACD,YAAMA,GAAN;AACH;AACJ,GATY,EASVN,YATU,CAAb;AAUH;;AAED,eAAeS,SAAf,CAAyBC,IAAzB,EAAmD;AAC/C,MAAIC,MAAM,GAAGC,YAAGC,gBAAH,CAAoBH,IAApB,CAAb;;AACA,MAAI;AACA,WAAO,MAAM,6BAAeC,MAAf,CAAb;AACH,GAFD,SAEU;AACNA,IAAAA,MAAM,CAACG,OAAP;AACH;AACJ;;AAED,eAAeC,UAAf,CAA0BC,KAA1B,EAA4E;AACxEpB,EAAAA,KAAK,CAAC,wBAAD,EAA2BoB,KAAK,CAACZ,GAAjC,CAAL;AACA,MAAIa,OAAJ;AACA,MAAIC,SAAS,GAAG,IAAIC,QAAJ,CAAQH,KAAK,CAACZ,GAAd,CAAhB;;AACA,MAAIc,SAAS,CAACE,QAAV,IAAsB,OAA1B,EAAmC;AAC/BH,IAAAA,OAAO,GAAGR,SAAS,CAACS,SAAS,CAACG,QAAX,CAAnB;AACH,GAFD,MAEO;AACHJ,IAAAA,OAAO,GAAGd,QAAQ,CAACa,KAAK,CAACZ,GAAP,CAAlB;AACH;;AAED,MAAIkB,IAAI,GAAG,MAAML,OAAjB;AACAD,EAAAA,KAAK,CAACO,KAAN,GAAcD,IAAI,CAACC,KAAnB;AACAP,EAAAA,KAAK,CAACQ,MAAN,GAAeF,IAAI,CAACE,MAApB;AACA,SAAOR,KAAP;AACH;;eAEcD,U","sourcesContent":["// Copyright 2019 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport Debug from 'debug';\nimport probeImageSize from 'probe-image-size';\nimport { ImageDefinition } from '../slides';\nimport retry from 'promise-retry';\nimport fs from 'fs';\nimport { URL } from 'url';\n\nconst debug = Debug('md2gslides');\nconst retriableCodes = ['ENOTFOUND', 'ECONNRESET', 'ETIMEDOUT'];\nconst probeOptions = { timeout: 5000 };\nconst retryOptions = {\n    retries: 3,\n    randomize: true,\n};\n\ninterface ImageSize {\n    width: number;\n    height: number;\n}\n\nasync function probeUrl(url): Promise<ImageSize> {\n    return await retry(async doRetry => {\n        try {\n            return await probeImageSize(url, probeOptions);\n        } catch (err) {\n            if (retriableCodes.includes(err.code)) {\n                doRetry(err);\n            }\n            throw err;\n        }\n    }, retryOptions);\n}\n\nasync function probeFile(path): Promise<ImageSize> {\n    let stream = fs.createReadStream(path);\n    try {\n        return await probeImageSize(stream);\n    } finally {\n        stream.destroy();\n    }\n}\n\nasync function probeImage(image: ImageDefinition): Promise<ImageDefinition> {\n    debug('Probing image size: %s', image.url);\n    let promise;\n    let parsedUrl = new URL(image.url);\n    if (parsedUrl.protocol == 'file:') {\n        promise = probeFile(parsedUrl.pathname);\n    } else {\n        promise = probeUrl(image.url);\n    }\n\n    let size = await promise;\n    image.width = size.width;\n    image.height = size.height;\n    return image;\n}\n\nexport default probeImage;\n"],"file":"probe.js"}