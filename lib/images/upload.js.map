{"version":3,"sources":["../../src/images/upload.ts"],"names":["debug","uploadLocalImage","filePath","stream","fs","createReadStream","params","file","res","request","post","url","formData","responseData","JSON","parse","success","link","destroy"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,MAAMA,KAAK,GAAG,oBAAM,YAAN,CAAd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeC,gBAAf,CAAgCC,QAAhC,EAAmE;AAC/DF,EAAAA,KAAK,CAAC,qBAAD,EAAwBE,QAAxB,CAAL;;AACA,QAAMC,MAAM,GAAGC,YAAGC,gBAAH,CAAoBH,QAApB,CAAf;;AACA,MAAI;AACA,QAAII,MAAM,GAAG;AACTC,MAAAA,IAAI,EAAEJ;AADG,KAAb;AAGA,QAAIK,GAAG,GAAG,MAAMC,8BAAQC,IAAR,CAAa;AACzBC,MAAAA,GAAG,EAAE,4BADoB;AAEzBC,MAAAA,QAAQ,EAAEN;AAFe,KAAb,CAAhB;AAIA,QAAIO,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWP,GAAX,CAAnB;;AACA,QAAI,CAACK,YAAY,CAACG,OAAlB,EAA2B;AACvBhB,MAAAA,KAAK,CAAC,2BAAD,EAA8Ba,YAA9B,CAAL;AACA,YAAML,GAAN;AACH;;AACDR,IAAAA,KAAK,CAAC,oBAAD,EAAuBa,YAAY,CAACI,IAApC,CAAL;AACA,WAAOJ,YAAY,CAACI,IAApB;AACH,GAfD,SAeU;AACNd,IAAAA,MAAM,CAACe,OAAP;AACH;AACJ;;eAEcjB,gB","sourcesContent":["// Copyright 2019 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport Debug from 'debug';\nimport fs from 'fs';\nimport request from 'request-promise-native';\n\nconst debug = Debug('md2gslides');\n\n/**\n * Uploads a local file to temporary storage so it is HTTP/S accessible.\n *\n * Currently uses https://file.io for free emphemeral file hosting.\n *\n * @param {string} filePath -- Local path to image to upload\n * @returns {Promise<string>} URL to hosted image\n */\nasync function uploadLocalImage(filePath: string): Promise<string> {\n    debug('Registering file %s', filePath);\n    const stream = fs.createReadStream(filePath);\n    try {\n        let params = {\n            file: stream,\n        };\n        let res = await request.post({\n            url: 'https://file.io?expires=1h',\n            formData: params,\n        });\n        let responseData = JSON.parse(res);\n        if (!responseData.success) {\n            debug('Unable to upload file: %O', responseData);\n            throw res;\n        }\n        debug('Temporary link: %s', responseData.link);\n        return responseData.link;\n    } finally {\n        stream.destroy();\n    }\n}\n\nexport default uploadLocalImage;\n"],"file":"upload.js"}