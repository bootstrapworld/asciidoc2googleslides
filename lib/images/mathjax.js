"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _debug = _interopRequireDefault(require("debug"));

var _mathjaxNode = _interopRequireDefault(require("mathjax-node"));

var _svg = _interopRequireDefault(require("./svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright 2019 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
const debug = (0, _debug.default)('md2gslides');
let mathJaxInitialized = false;

function lazyInitMathJax() {
  if (mathJaxInitialized) {
    return;
  }

  _mathjaxNode.default.config({
    MathJax: {
      SVG: {
        scale: 500
      }
    }
  });

  _mathjaxNode.default.start();

  mathJaxInitialized = true;
}

function formatFor(expression) {
  return expression.trim().startsWith('<math>') ? 'MathML' : 'TeX';
}

function addOrMergeStyles(svg, style) {
  if (!style) {
    return svg;
  }

  let match = svg.match(/(<svg[^>]+)(style="([^"]+)")([^>]+>)/);

  if (match) {
    return svg.slice(0, match[1].length) + `style="${style};${match[3]}"` + svg.slice(match[1].length + match[2].length);
  } else {
    let i = svg.indexOf('>');
    return svg.slice(0, i) + ` style="${style}"` + svg.slice(i);
  }
}

async function renderMathJax(image) {
  debug('Generating math image: %O', image);
  lazyInitMathJax();
  let out = await _mathjaxNode.default.typeset({
    math: image.source,
    format: formatFor(image.source),
    svg: true
  });
  image.source = addOrMergeStyles(out.svg, image.style);
  image.type = 'svg';
  return await (0, _svg.default)(image);
}

var _default = renderMathJax;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbWFnZXMvbWF0aGpheC50cyJdLCJuYW1lcyI6WyJkZWJ1ZyIsIm1hdGhKYXhJbml0aWFsaXplZCIsImxhenlJbml0TWF0aEpheCIsIm1hdGhKYXgiLCJjb25maWciLCJNYXRoSmF4IiwiU1ZHIiwic2NhbGUiLCJzdGFydCIsImZvcm1hdEZvciIsImV4cHJlc3Npb24iLCJ0cmltIiwic3RhcnRzV2l0aCIsImFkZE9yTWVyZ2VTdHlsZXMiLCJzdmciLCJzdHlsZSIsIm1hdGNoIiwic2xpY2UiLCJsZW5ndGgiLCJpIiwiaW5kZXhPZiIsInJlbmRlck1hdGhKYXgiLCJpbWFnZSIsIm91dCIsInR5cGVzZXQiLCJtYXRoIiwic291cmNlIiwiZm9ybWF0IiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQWNBOztBQUNBOztBQUNBOzs7O0FBaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0EsTUFBTUEsS0FBSyxHQUFHLG9CQUFNLFlBQU4sQ0FBZDtBQUNBLElBQUlDLGtCQUFrQixHQUFHLEtBQXpCOztBQUVBLFNBQVNDLGVBQVQsR0FBaUM7QUFDN0IsTUFBSUQsa0JBQUosRUFBd0I7QUFDcEI7QUFDSDs7QUFDREUsdUJBQVFDLE1BQVIsQ0FBZTtBQUNYQyxJQUFBQSxPQUFPLEVBQUU7QUFDTEMsTUFBQUEsR0FBRyxFQUFFO0FBQ0RDLFFBQUFBLEtBQUssRUFBRTtBQUROO0FBREE7QUFERSxHQUFmOztBQU9BSix1QkFBUUssS0FBUjs7QUFDQVAsRUFBQUEsa0JBQWtCLEdBQUcsSUFBckI7QUFDSDs7QUFFRCxTQUFTUSxTQUFULENBQW1CQyxVQUFuQixFQUErQztBQUMzQyxTQUFPQSxVQUFVLENBQUNDLElBQVgsR0FBa0JDLFVBQWxCLENBQTZCLFFBQTdCLElBQXlDLFFBQXpDLEdBQW9ELEtBQTNEO0FBQ0g7O0FBRUQsU0FBU0MsZ0JBQVQsQ0FBMEJDLEdBQTFCLEVBQXVDQyxLQUF2QyxFQUErRDtBQUMzRCxNQUFJLENBQUNBLEtBQUwsRUFBWTtBQUNSLFdBQU9ELEdBQVA7QUFDSDs7QUFDRCxNQUFJRSxLQUFLLEdBQUdGLEdBQUcsQ0FBQ0UsS0FBSixDQUFVLHNDQUFWLENBQVo7O0FBQ0EsTUFBSUEsS0FBSixFQUFXO0FBQ1AsV0FDSUYsR0FBRyxDQUFDRyxLQUFKLENBQVUsQ0FBVixFQUFhRCxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNFLE1BQXRCLElBQ0MsVUFBU0gsS0FBTSxJQUFHQyxLQUFLLENBQUMsQ0FBRCxDQUFJLEdBRDVCLEdBRUFGLEdBQUcsQ0FBQ0csS0FBSixDQUFVRCxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNFLE1BQVQsR0FBa0JGLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0UsTUFBckMsQ0FISjtBQUtILEdBTkQsTUFNTztBQUNILFFBQUlDLENBQUMsR0FBR0wsR0FBRyxDQUFDTSxPQUFKLENBQVksR0FBWixDQUFSO0FBQ0EsV0FBT04sR0FBRyxDQUFDRyxLQUFKLENBQVUsQ0FBVixFQUFhRSxDQUFiLElBQW1CLFdBQVVKLEtBQU0sR0FBbkMsR0FBd0NELEdBQUcsQ0FBQ0csS0FBSixDQUFVRSxDQUFWLENBQS9DO0FBQ0g7QUFDSjs7QUFFRCxlQUFlRSxhQUFmLENBQTZCQyxLQUE3QixFQUFzRTtBQUNsRXRCLEVBQUFBLEtBQUssQ0FBQywyQkFBRCxFQUE4QnNCLEtBQTlCLENBQUw7QUFDQXBCLEVBQUFBLGVBQWU7QUFDZixNQUFJcUIsR0FBRyxHQUFHLE1BQU1wQixxQkFBUXFCLE9BQVIsQ0FBZ0I7QUFDNUJDLElBQUFBLElBQUksRUFBRUgsS0FBSyxDQUFDSSxNQURnQjtBQUU1QkMsSUFBQUEsTUFBTSxFQUFFbEIsU0FBUyxDQUFDYSxLQUFLLENBQUNJLE1BQVAsQ0FGVztBQUc1QlosSUFBQUEsR0FBRyxFQUFFO0FBSHVCLEdBQWhCLENBQWhCO0FBS0FRLEVBQUFBLEtBQUssQ0FBQ0ksTUFBTixHQUFlYixnQkFBZ0IsQ0FBQ1UsR0FBRyxDQUFDVCxHQUFMLEVBQVVRLEtBQUssQ0FBQ1AsS0FBaEIsQ0FBL0I7QUFDQU8sRUFBQUEsS0FBSyxDQUFDTSxJQUFOLEdBQWEsS0FBYjtBQUNBLFNBQU8sTUFBTSxrQkFBVU4sS0FBVixDQUFiO0FBQ0g7O2VBRWNELGEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOSBHb29nbGUgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgRGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IG1hdGhKYXggZnJvbSAnbWF0aGpheC1ub2RlJztcbmltcG9ydCByZW5kZXJTVkcgZnJvbSAnLi9zdmcnO1xuaW1wb3J0IHsgSW1hZ2VEZWZpbml0aW9uIH0gZnJvbSAnLi4vc2xpZGVzJztcblxuY29uc3QgZGVidWcgPSBEZWJ1ZygnbWQyZ3NsaWRlcycpO1xubGV0IG1hdGhKYXhJbml0aWFsaXplZCA9IGZhbHNlO1xuXG5mdW5jdGlvbiBsYXp5SW5pdE1hdGhKYXgoKTogdm9pZCB7XG4gICAgaWYgKG1hdGhKYXhJbml0aWFsaXplZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG1hdGhKYXguY29uZmlnKHtcbiAgICAgICAgTWF0aEpheDoge1xuICAgICAgICAgICAgU1ZHOiB7XG4gICAgICAgICAgICAgICAgc2NhbGU6IDUwMCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgbWF0aEpheC5zdGFydCgpO1xuICAgIG1hdGhKYXhJbml0aWFsaXplZCA9IHRydWU7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdEZvcihleHByZXNzaW9uOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBleHByZXNzaW9uLnRyaW0oKS5zdGFydHNXaXRoKCc8bWF0aD4nKSA/ICdNYXRoTUwnIDogJ1RlWCc7XG59XG5cbmZ1bmN0aW9uIGFkZE9yTWVyZ2VTdHlsZXMoc3ZnOiBzdHJpbmcsIHN0eWxlPzogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBpZiAoIXN0eWxlKSB7XG4gICAgICAgIHJldHVybiBzdmc7XG4gICAgfVxuICAgIGxldCBtYXRjaCA9IHN2Zy5tYXRjaCgvKDxzdmdbXj5dKykoc3R5bGU9XCIoW15cIl0rKVwiKShbXj5dKz4pLyk7XG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICBzdmcuc2xpY2UoMCwgbWF0Y2hbMV0ubGVuZ3RoKSArXG4gICAgICAgICAgICBgc3R5bGU9XCIke3N0eWxlfTske21hdGNoWzNdfVwiYCArXG4gICAgICAgICAgICBzdmcuc2xpY2UobWF0Y2hbMV0ubGVuZ3RoICsgbWF0Y2hbMl0ubGVuZ3RoKVxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBpID0gc3ZnLmluZGV4T2YoJz4nKTtcbiAgICAgICAgcmV0dXJuIHN2Zy5zbGljZSgwLCBpKSArIGAgc3R5bGU9XCIke3N0eWxlfVwiYCArIHN2Zy5zbGljZShpKTtcbiAgICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlbmRlck1hdGhKYXgoaW1hZ2U6IEltYWdlRGVmaW5pdGlvbik6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgZGVidWcoJ0dlbmVyYXRpbmcgbWF0aCBpbWFnZTogJU8nLCBpbWFnZSk7XG4gICAgbGF6eUluaXRNYXRoSmF4KCk7XG4gICAgbGV0IG91dCA9IGF3YWl0IG1hdGhKYXgudHlwZXNldCh7XG4gICAgICAgIG1hdGg6IGltYWdlLnNvdXJjZSxcbiAgICAgICAgZm9ybWF0OiBmb3JtYXRGb3IoaW1hZ2Uuc291cmNlKSxcbiAgICAgICAgc3ZnOiB0cnVlLFxuICAgIH0pO1xuICAgIGltYWdlLnNvdXJjZSA9IGFkZE9yTWVyZ2VTdHlsZXMob3V0LnN2ZywgaW1hZ2Uuc3R5bGUpO1xuICAgIGltYWdlLnR5cGUgPSAnc3ZnJztcbiAgICByZXR1cm4gYXdhaXQgcmVuZGVyU1ZHKGltYWdlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVuZGVyTWF0aEpheDtcbiJdfQ==
//# sourceMappingURL=mathjax.js.map