{"version":3,"sources":["../../src/images/mathjax.ts"],"names":["debug","mathJaxInitialized","lazyInitMathJax","mathJax","config","MathJax","SVG","scale","start","formatFor","expression","trim","startsWith","addOrMergeStyles","svg","style","match","slice","length","i","indexOf","renderMathJax","image","out","typeset","math","source","format","type"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,MAAMA,KAAK,GAAG,oBAAM,YAAN,CAAd;AACA,IAAIC,kBAAkB,GAAG,KAAzB;;AAEA,SAASC,eAAT,GAAiC;AAC7B,MAAID,kBAAJ,EAAwB;AACpB;AACH;;AACDE,uBAAQC,MAAR,CAAe;AACXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,GAAG,EAAE;AACDC,QAAAA,KAAK,EAAE;AADN;AADA;AADE,GAAf;;AAOAJ,uBAAQK,KAAR;;AACAP,EAAAA,kBAAkB,GAAG,IAArB;AACH;;AAED,SAASQ,SAAT,CAAmBC,UAAnB,EAA+C;AAC3C,SAAOA,UAAU,CAACC,IAAX,GAAkBC,UAAlB,CAA6B,QAA7B,IAAyC,QAAzC,GAAoD,KAA3D;AACH;;AAED,SAASC,gBAAT,CAA0BC,GAA1B,EAAuCC,KAAvC,EAA+D;AAC3D,MAAI,CAACA,KAAL,EAAY;AACR,WAAOD,GAAP;AACH;;AACD,MAAIE,KAAK,GAAGF,GAAG,CAACE,KAAJ,CAAU,sCAAV,CAAZ;;AACA,MAAIA,KAAJ,EAAW;AACP,WACIF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaD,KAAK,CAAC,CAAD,CAAL,CAASE,MAAtB,IACC,UAASH,KAAM,IAAGC,KAAK,CAAC,CAAD,CAAI,GAD5B,GAEAF,GAAG,CAACG,KAAJ,CAAUD,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,GAAkBF,KAAK,CAAC,CAAD,CAAL,CAASE,MAArC,CAHJ;AAKH,GAND,MAMO;AACH,QAAIC,CAAC,GAAGL,GAAG,CAACM,OAAJ,CAAY,GAAZ,CAAR;AACA,WAAON,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaE,CAAb,IAAmB,WAAUJ,KAAM,GAAnC,GAAwCD,GAAG,CAACG,KAAJ,CAAUE,CAAV,CAA/C;AACH;AACJ;;AAED,eAAeE,aAAf,CAA6BC,KAA7B,EAAsE;AAClEtB,EAAAA,KAAK,CAAC,2BAAD,EAA8BsB,KAA9B,CAAL;AACApB,EAAAA,eAAe;AACf,MAAIqB,GAAG,GAAG,MAAMpB,qBAAQqB,OAAR,CAAgB;AAC5BC,IAAAA,IAAI,EAAEH,KAAK,CAACI,MADgB;AAE5BC,IAAAA,MAAM,EAAElB,SAAS,CAACa,KAAK,CAACI,MAAP,CAFW;AAG5BZ,IAAAA,GAAG,EAAE;AAHuB,GAAhB,CAAhB;AAKAQ,EAAAA,KAAK,CAACI,MAAN,GAAeb,gBAAgB,CAACU,GAAG,CAACT,GAAL,EAAUQ,KAAK,CAACP,KAAhB,CAA/B;AACAO,EAAAA,KAAK,CAACM,IAAN,GAAa,KAAb;AACA,SAAO,MAAM,kBAAUN,KAAV,CAAb;AACH;;eAEcD,a","sourcesContent":["// Copyright 2019 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport Debug from 'debug';\nimport mathJax from 'mathjax-node';\nimport renderSVG from './svg';\nimport { ImageDefinition } from '../slides';\n\nconst debug = Debug('md2gslides');\nlet mathJaxInitialized = false;\n\nfunction lazyInitMathJax(): void {\n    if (mathJaxInitialized) {\n        return;\n    }\n    mathJax.config({\n        MathJax: {\n            SVG: {\n                scale: 500,\n            },\n        },\n    });\n    mathJax.start();\n    mathJaxInitialized = true;\n}\n\nfunction formatFor(expression: string): string {\n    return expression.trim().startsWith('<math>') ? 'MathML' : 'TeX';\n}\n\nfunction addOrMergeStyles(svg: string, style?: string): string {\n    if (!style) {\n        return svg;\n    }\n    let match = svg.match(/(<svg[^>]+)(style=\"([^\"]+)\")([^>]+>)/);\n    if (match) {\n        return (\n            svg.slice(0, match[1].length) +\n            `style=\"${style};${match[3]}\"` +\n            svg.slice(match[1].length + match[2].length)\n        );\n    } else {\n        let i = svg.indexOf('>');\n        return svg.slice(0, i) + ` style=\"${style}\"` + svg.slice(i);\n    }\n}\n\nasync function renderMathJax(image: ImageDefinition): Promise<string> {\n    debug('Generating math image: %O', image);\n    lazyInitMathJax();\n    let out = await mathJax.typeset({\n        math: image.source,\n        format: formatFor(image.source),\n        svg: true,\n    });\n    image.source = addOrMergeStyles(out.svg, image.style);\n    image.type = 'svg';\n    return await renderSVG(image);\n}\n\nexport default renderMathJax;\n"],"file":"mathjax.js"}